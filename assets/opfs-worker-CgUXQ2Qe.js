(function(){"use strict";function l(n){return self.onmessage=async({data:e})=>{try{const t=n[e.name];if(!t)throw new Error(`[BUG] No handler for type ${e.name}`);let r=t.apply(self,e.args);r instanceof Promise&&(r=await r),self.postMessage({reqid:e.reqid,resolve:r})}catch(t){self.postMessage({reqid:e.reqid,reject:t.message})}},null}async function i(n,e){const t=n.split("/").filter(Boolean),r=t.slice(0,-1).join("/"),a=await s(r,{root:e==null?void 0:e.root}),o=t[t.length-1];if(!o)throw new Error("Invalid file path without basename");return await a.getFileHandle(o,{create:e==null?void 0:e.create})}async function s(n,e){let t=(e==null?void 0:e.root)??await globalThis._o.getStorageRoot();const r=n.split("/").filter(Boolean);for(const a of r)t=await t.getDirectoryHandle(a,{create:!1});return t}self._o={},self._o.getStorageRoot=()=>self.navigator.storage.getDirectory();async function c(n,e){const r=await(await i(n)).createSyncAccessHandle();return r.truncate(0),r.write(e),r.flush(),r.close(),e.byteLength}l({writeContents:c})})();
